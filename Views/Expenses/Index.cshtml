@model IEnumerable<FinanceApp.Models.Expenses>

<h2>My Expenses</h2>

<div class="container">
    <table class="table table-bordered">
        <thead class="table-light">
            <tr>
                <th>Amount</th>
                <th>Date</th>
                <th>Category</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                    <tr>
                        <td>@item.Amount</td>
                        <td>@item.Date</td>
                        <td>@item.Category</td>
                        <td>@item.Description</td>
                    </tr>
            }
        </tbody>
    </table>
</div>

<h2>Expenses Overview</h2>

<div style="width: 50%; max-width: 400px; margin: auto;">
  <canvas id="myChart"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  const ctx = document.getElementById('myChart').getContext('2d');

  fetch('/Expenses/GetChart')
       .then(response => response.json()) 
       .then(data => {
           new Chart(ctx, {
               type: 'pie',
               data: {
                   labels: data.map(d => d.category),
                   datasets: [{
                       label: 'Total Expenses',
                       data: data.map(d => d.total),
                       backgroundColor: [
                           'rgba(255, 99, 132, 0.6)',
                           'rgba(54, 162, 235, 0.6)',
                           'rgba(255, 206, 86, 0.6)',
                           'rgba(75, 192, 192, 0.6)',
                           'rgba(153, 102, 255, 0.6)',
                           'rgba(255, 159, 64, 0.6)'
                       ],
                       borderColor: [
                           'rgba(255, 99, 132, 1)',
                           'rgba(54, 162, 235, 1)',
                           'rgba(255, 206, 86, 1)',
                           'rgba(75, 192, 192, 1)',
                           'rgba(153, 102, 255, 1)',
                           'rgba(255, 159, 64, 1)'
                       ],
                       borderWidth: 1
                   }]
               },
               options: {
                   responsive: true,
                   maintainAspectRatio: false, // ✅ Prevents auto-stretching
                   plugins: {
                       legend: {
                           position: 'bottom'
                       }
                   }
               }
           });
       })
       .catch(error => console.error("Error fetching chart data:", error));
</script>

